{"version":3,"sources":["store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","index.js"],"names":["initState","authError","authReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","err","message","projectReducer","project","rootReducer","combineReducers","auth","firebase","firebaseReducer","firestore","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","connect","dispatch","signOut","getState","_ref2","getFirebase","then","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","ProjectSummary","_ref","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","project_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","_this$props","project_ProjectList","dashboard_Notifications","Redirect","Component","compose","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","eamil","password","handleChange","e","_this","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","email","catch","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.636cc0d6.chunk.js","sourcesContent":["const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('sign out success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n               ...state,\r\n               authError: null\r\n            };\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n               ...state,\r\n               authError: action.err.message\r\n            }; \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT_SUCCESS':\r\n            console.log('create project success', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error');\r\n            return state; \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyDkZ3pN-yzvmzawL63NEVpvuP6w8YpLQPE\",\r\n    authDomain: \"schedule-planner-c324b.firebaseapp.com\",\r\n    databaseURL: \"https://schedule-planner-c324b.firebaseio.com\",\r\n    projectId: \"schedule-planner-c324b\",\r\n    storageBucket: \"schedule-planner-c324b.appspot.com\",\r\n    messagingSenderId: \"956351763235\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authAction';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/create'>New Project</NavLink></li>\r\n                <li><a onClick={props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className='btn btn-floating green lighten-1'>{props.profile.initials}\r\n                </NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        //make async call to database\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'LOGIN_ERROR'}, err)\r\n        });\r\n    }\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        //make async call to database\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to database\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR'}, err)\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid? <SignedInLinks profile={profile} />: <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div>\r\n                <Link to='/' className='brand-logo center'>Planner</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n} \r\nexport default connect(mapStateToProps)(Navbar); \r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">\r\n                {moment(project.createdAt.toDate()).calendar()}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"online-users\">\r\n                        { notifications && notifications.map(item =>{\r\n                            return <li key={item.id}>\r\n                                <span className=\"red-text\">{item.user} </span>\r\n                                <span>{item.content}</span>\r\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notifications;","import React, { Component } from 'react';\r\nimport ProjectList from '../project/ProjectList';\r\nimport Notifications from './Notifications';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n        <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <ProjectList projects={projects} />\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications \r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard); \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />;\r\n    if(project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className='card'>\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">\r\n                            {project.title}\r\n                        </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey grey-text lighten-4\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading projects...</p>\r\n            </div>\r\n        )\r\n    } \r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects? projects[id]: null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'projects'\r\n    }])\r\n)(ProjectDetails); \r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn }  from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    eamil: '',\r\n    password: ''\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className='container'>\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn teal lighten-1\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authAction';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    eamil: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className='container'>\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">Last name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn teal lighten-1\">Sign Up</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{ authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className='container'>\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className='grey-text text-darken-3'>Create a new project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Project title</label>\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project content</label>\r\n            <textarea id='content' className='materialize-textarea' onChange={this.handleChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn teal lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n} \r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR'}, err)\r\n        });\r\n    } \r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from'./components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reactReduxFirebase(fbConfig, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady : true }), //redux binding to firebasse\n        reduxFirestore(fbConfig)  //redux binding to firestore\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n});\n"],"sourceRoot":""}